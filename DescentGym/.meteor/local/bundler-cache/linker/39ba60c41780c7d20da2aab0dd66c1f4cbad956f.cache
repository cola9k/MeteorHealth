[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAccountsClient = Package['accounts-base'].AccountsClient;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"You're logged in.\"), \"\\n\" ];\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"register\")), \"\\n    \", Spacebars.include(view.lookupTemplate(\"login\")), \"\\n\" ];\n  });\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"register\");\nTemplate[\"register\"] = new Template(\"Template.register\", (function() {\n  var view = this;\n  return HTML.Raw('<form>\\n        <input type=\"email\" name=\"registerEmail\">\\n        <input type=\"password\" name=\"registerPassword\">\\n        <input type=\"submit\" value=\"Register\">\\n    </form>');\n}));\n\nTemplate.__checkName(\"login\");\nTemplate[\"login\"] = new Template(\"Template.login\", (function() {\n  var view = this;\n  return HTML.Raw('<form>\\n        <input type=\"email\" name=\"loginEmail\">\\n        <input type=\"password\" name=\"loginPassword\">\\n        <input type=\"submit\" value=\"Login\">w\\n    </form>');\n}));\n\nTemplate.__checkName(\"dashboard\");\nTemplate[\"dashboard\"] = new Template(\"Template.dashboard\", (function() {\n  var view = this;\n  return HTML.Raw('<p>You\\'re logged in.</p>\\n    <p><a href=\"#\" class=\"logout\">Logout</a></p>');\n}));\n\n}).call(this);\n","servePath":"/template.DescentGym.js","sourceMap":{"version":3,"sources":["/template.DescentGym.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/template.DescentGym.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"You're logged in.\"), \"\\n\" ];\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"register\")), \"\\n    \", Spacebars.include(view.lookupTemplate(\"login\")), \"\\n\" ];\n  });\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"register\");\nTemplate[\"register\"] = new Template(\"Template.register\", (function() {\n  var view = this;\n  return HTML.Raw('<form>\\n        <input type=\"email\" name=\"registerEmail\">\\n        <input type=\"password\" name=\"registerPassword\">\\n        <input type=\"submit\" value=\"Register\">\\n    </form>');\n}));\n\nTemplate.__checkName(\"login\");\nTemplate[\"login\"] = new Template(\"Template.login\", (function() {\n  var view = this;\n  return HTML.Raw('<form>\\n        <input type=\"email\" name=\"loginEmail\">\\n        <input type=\"password\" name=\"loginPassword\">\\n        <input type=\"submit\" value=\"Login\">w\\n    </form>');\n}));\n\nTemplate.__checkName(\"dashboard\");\nTemplate[\"dashboard\"] = new Template(\"Template.dashboard\", (function() {\n  var view = this;\n  return HTML.Raw('<p>You\\'re logged in.</p>\\n    <p><a href=\"#\" class=\"logout\">Logout</a></p>');\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"layout\");\nTemplate[\"layout\"] = new Template(\"Template.layout\", (function() {\n  var view = this;\n  return [ HTML.Raw('<!--&lt;!&ndash;body안에 들어갈 녀석만 템플릿으로 넣는다&ndash;&gt;-->\\n    <!--<h1>HomeGym Trainner</h1>-->\\n\\n    <!--&lt;!&ndash;하이퍼링크 부르는 법 1)&ndash;&gt;-->\\n    <!--&lt;!&ndash;html의 내부 하이퍼링크에 가는 법 #&ndash;&gt;-->\\n    <!--&lt;!&ndash;<a href=\"/\">홈</a>&ndash;&gt;-->\\n    <!--&lt;!&ndash;<a href=\"/about\">소개</a>&ndash;&gt;-->\\n    <!--&lt;!&ndash;<a href=\"/press\">언론정보</a>&ndash;&gt;-->\\n    <!--&lt;!&ndash;<a href=\"/contact\">연락처</a>&ndash;&gt;-->\\n\\n    <!--&lt;!&ndash;하이퍼링크 부르는 법 2)&ndash;&gt;-->\\n    <!--&lt;!&ndash;pathFor 는 name이다&ndash;&gt;-->\\n    <!--<a href=\"{{pathFor \\'home\\'}}\">홈</a>-->\\n    <!--<a href=\"{{pathFor \\'rotation\\'}}\">로테이션</a>-->\\n    <!--<a href=\"{{pathFor \\'feed\\'}}\">Feed</a>-->\\n    <!--<a href=\"{{pathFor \\'myinfo\\'}}\">내 정보</a>-->\\n\\n    <!--{{>yield}}-->\\n    <!--&lt;!&ndash;Router가 템플릿으로 로딩 된다.Router를 생략하면 copyright가 밑에 만들어 진다,&ndash;&gt;-->\\n        '), Spacebars.include(view.lookupTemplate(\"Router\")), HTML.Raw(\"\\n    <!--<p>copyright 2016 태현 all right reserved.</p>-->\\n\\n    \"), HTML.DIV({\n    id: \"wrapper\"\n  }, \"\\n        \", HTML.Raw(\"<!-- Sidebar -->\"), \"\\n        \", HTML.DIV({\n    id: \"sidebar-wrapper\"\n  }, \"\\n            \", HTML.UL({\n    \"class\": \"sidebar-nav\"\n  }, \"\\n                \", HTML.LI({\n    \"class\": \"sidebar-brand\"\n  }, \"\\n                    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"#\");\n    }\n  }, \"\\n                        \", HTML.Raw(\"<h2>H.G.T</h2>\"), \"\\n                    \"), \"\\n                \"), \"\\n                \", HTML.Raw('<li>\\n                    <a href=\"\"></a>\\n                </li>'), \"\\n                \", HTML.LI(\"\\n                    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"feed\");\n    }\n  }, \"Feed\"), \"\\n                \"), \"\\n                \", HTML.LI(\"\\n                    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"rotation\");\n    }\n  }, \"Rotation\"), \"\\n                \"), \"\\n                \", HTML.LI(\"\\n                    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"myinfo\");\n    }\n  }, \"MyInfo\"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.Raw(\"<!-- /#sidebar-wrapper -->\"), \"\\n        \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n        \", HTML.Raw(\"<!-- Page Content -->\"), \"\\n\\n        \", HTML.Raw(\"<!-- /#page-content-wrapper -->\"), \"\\n\\n    \"), HTML.Raw(\"\\n    <!-- /#wrapper -->\\n\\n    <!-- jQuery -->\\n    \"), HTML.SCRIPT({\n    src: \"js/jquery.js\"\n  }), HTML.Raw(\"\\n\\n    <!-- Bootstrap Core JavaScript -->\\n    \"), HTML.SCRIPT({\n    src: \"js/bootstrap.min.js\"\n  }), HTML.Raw(\"\\n\\n    <!-- Menu Toggle Script -->\\n    \"), HTML.SCRIPT('\\n        $(\"#menu-toggle\").click(function(e) {\\n            e.preventDefault();\\n            $(\"#wrapper\").toggleClass(\"toggled\");\\n        });\\n    ') ];\n}));\n\n}).call(this);\n","servePath":"/template.layout.js","sourceMap":{"version":3,"sources":["/template.layout.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/template.layout.js","sourcesContent":["\nTemplate.__checkName(\"layout\");\nTemplate[\"layout\"] = new Template(\"Template.layout\", (function() {\n  var view = this;\n  return [ HTML.Raw('<!--&lt;!&ndash;body안에 들어갈 녀석만 템플릿으로 넣는다&ndash;&gt;-->\\n    <!--<h1>HomeGym Trainner</h1>-->\\n\\n    <!--&lt;!&ndash;하이퍼링크 부르는 법 1)&ndash;&gt;-->\\n    <!--&lt;!&ndash;html의 내부 하이퍼링크에 가는 법 #&ndash;&gt;-->\\n    <!--&lt;!&ndash;<a href=\"/\">홈</a>&ndash;&gt;-->\\n    <!--&lt;!&ndash;<a href=\"/about\">소개</a>&ndash;&gt;-->\\n    <!--&lt;!&ndash;<a href=\"/press\">언론정보</a>&ndash;&gt;-->\\n    <!--&lt;!&ndash;<a href=\"/contact\">연락처</a>&ndash;&gt;-->\\n\\n    <!--&lt;!&ndash;하이퍼링크 부르는 법 2)&ndash;&gt;-->\\n    <!--&lt;!&ndash;pathFor 는 name이다&ndash;&gt;-->\\n    <!--<a href=\"{{pathFor \\'home\\'}}\">홈</a>-->\\n    <!--<a href=\"{{pathFor \\'rotation\\'}}\">로테이션</a>-->\\n    <!--<a href=\"{{pathFor \\'feed\\'}}\">Feed</a>-->\\n    <!--<a href=\"{{pathFor \\'myinfo\\'}}\">내 정보</a>-->\\n\\n    <!--{{>yield}}-->\\n    <!--&lt;!&ndash;Router가 템플릿으로 로딩 된다.Router를 생략하면 copyright가 밑에 만들어 진다,&ndash;&gt;-->\\n        '), Spacebars.include(view.lookupTemplate(\"Router\")), HTML.Raw(\"\\n    <!--<p>copyright 2016 태현 all right reserved.</p>-->\\n\\n    \"), HTML.DIV({\n    id: \"wrapper\"\n  }, \"\\n        \", HTML.Raw(\"<!-- Sidebar -->\"), \"\\n        \", HTML.DIV({\n    id: \"sidebar-wrapper\"\n  }, \"\\n            \", HTML.UL({\n    \"class\": \"sidebar-nav\"\n  }, \"\\n                \", HTML.LI({\n    \"class\": \"sidebar-brand\"\n  }, \"\\n                    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"#\");\n    }\n  }, \"\\n                        \", HTML.Raw(\"<h2>H.G.T</h2>\"), \"\\n                    \"), \"\\n                \"), \"\\n                \", HTML.Raw('<li>\\n                    <a href=\"\"></a>\\n                </li>'), \"\\n                \", HTML.LI(\"\\n                    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"feed\");\n    }\n  }, \"Feed\"), \"\\n                \"), \"\\n                \", HTML.LI(\"\\n                    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"rotation\");\n    }\n  }, \"Rotation\"), \"\\n                \"), \"\\n                \", HTML.LI(\"\\n                    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"myinfo\");\n    }\n  }, \"MyInfo\"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.Raw(\"<!-- /#sidebar-wrapper -->\"), \"\\n        \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n        \", HTML.Raw(\"<!-- Page Content -->\"), \"\\n\\n        \", HTML.Raw(\"<!-- /#page-content-wrapper -->\"), \"\\n\\n    \"), HTML.Raw(\"\\n    <!-- /#wrapper -->\\n\\n    <!-- jQuery -->\\n    \"), HTML.SCRIPT({\n    src: \"js/jquery.js\"\n  }), HTML.Raw(\"\\n\\n    <!-- Bootstrap Core JavaScript -->\\n    \"), HTML.SCRIPT({\n    src: \"js/bootstrap.min.js\"\n  }), HTML.Raw(\"\\n\\n    <!-- Menu Toggle Script -->\\n    \"), HTML.SCRIPT('\\n        $(\"#menu-toggle\").click(function(e) {\\n            e.preventDefault();\\n            $(\"#wrapper\").toggleClass(\"toggled\");\\n        });\\n    ') ];\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"loading\");\nTemplate[\"loading\"] = new Template(\"Template.loading\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h1>Loading...</h1>\");\n}));\n\n}).call(this);\n","servePath":"/template.loading.js","sourceMap":{"version":3,"sources":["/template.loading.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA","file":"/template.loading.js","sourcesContent":["\nTemplate.__checkName(\"loading\");\nTemplate[\"loading\"] = new Template(\"Template.loading\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h1>Loading...</h1>\");\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h1>Not Found 404 page...!!</h1>\");\n}));\n\n}).call(this);\n","servePath":"/template.notFound.js","sourceMap":{"version":3,"sources":["/template.notFound.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA","file":"/template.notFound.js","sourcesContent":["\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h1>Not Found 404 page...!!</h1>\");\n}));\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// DescentGym.js                                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nif (Meteor.isClient) {                                                 // 1\n    //Template.body.events({                                           //\n    //    \"submit form\": function (event) {                            //\n    //                                                                 //\n    //        var userName = event.target.username.value;              //\n    //        var Email = event.target.email.value;                    //\n    //        var Psw = event.target.psw.value;                        //\n    //                                                                 //\n    //                                                                 //\n    //    },                                                           //\n    //    \"click #myBtn\": function () {                                //\n    //        $(\"#myModal\").modal();                                   //\n    //    }                                                            //\n    //});                                                              //\n                                                                       //\n    Template.register.events({                                         // 16\n        'submit form': function (event) {                              // 17\n            event.preventDefault();                                    // 18\n            var emailVar = event.target.registerEmail.value;           // 19\n            var passwordVar = event.target.registerPassword.value;     // 20\n            Accounts.createUser({                                      // 21\n                email: emailVar,                                       // 22\n                password: passwordVar                                  // 23\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    Template.login.events({                                            // 29\n        'submit form': function (event) {                              // 30\n            event.preventDefault();                                    // 31\n            var emailVar = event.target.loginEmail.value;              // 32\n            var passwordVar = event.target.loginPassword.value;        // 33\n            Meteor.loginWithPassword(emailVar, passwordVar);           // 34\n        }                                                              //\n    });                                                                //\n}                                                                      //\n                                                                       //\nAccounts.createUser({                                                  // 39\n    email: emailVar,                                                   // 40\n    password: passwordVar                                              // 41\n});                                                                    //\n//$(document).ready(function(){                                        //\n//    $(\"#myBtn\").click(function(){                                    //\n//        $(\"#myModal\").modal();                                       //\n//    });                                                              //\n//});                                                                  //\n                                                                       //\n//Tasks = new Mongo.Collection(\"tasks\");                               //\n//                                                                     //\n//if (Meteor.isClient) {                                               //\n//  // This code only runs on the client                               //\n//  Template.body.helpers({                                            //\n//    tasks: function () {                                             //\n//      return Tasks.find({});                                         //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Template.body.events({                                             //\n//    \"submit .new-task\": function (event) {                           //\n//      // Prevent default browser form submit                         //\n//      event.preventDefault();                                        //\n//                                                                     //\n//      // Get value from form element                                 //\n//      var text = event.target.text.value;                            //\n//                                                                     //\n//      // Insert a task into the collection                           //\n//      Tasks.insert({                                                 //\n//        text: text,                                                  //\n//        createdAt: new Date(), // current time                       //\n//        ower: Meteor.userId(),                                       //\n//        username: Meteor.user().username                             //\n//      });                                                            //\n//                                                                     //\n//      // Clear form                                                  //\n//      event.target.text.value = \"\";                                  //\n//    },                                                               //\n//    \"change .hide-completed input\": function (event) {               //\n//      Session.set(\"hideCompleted\", event.target.checked);            //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Template.body.helpers({                                            //\n//    tasks: function() {                                              //\n//      if (Session.get(\"hideCompleted\")) {                            //\n//        return Tasks.find({checked: {$ne: true}}, {sort: {createAt: -1}});\n//      } else {                                                       //\n//        return Tasks.find({},{sort: {createAT: -1}});                //\n//      }                                                              //\n//    },                                                               //\n//    hideCompleted: function () {                                     //\n//      return Session.get(\"highCompleted\");                           //\n//    },                                                               //\n//    incompleteCount: function() {                                    //\n//      return Tasks.find({checked: {$ne: true}}).count();             //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Template.task.events({                                             //\n//    \"click .toggle-checked\": function () {                           //\n//      // Set the checked property to the opposite of its current value\n//      Tasks.update(this._id, {                                       //\n//        $set: {checked: ! this.checked}                              //\n//      });                                                            //\n//    },                                                               //\n//    \"click .delete\": function () {                                   //\n//      Tasks.remove(this._id);                                        //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Accounts.ui.config({                                               //\n//    passwordSignupFields: \"USERNAME_ONLY\"                            //\n//  });                                                                //\n//}                                                                    //\n                                                                       //\n//var express = require('express');                                    //\n//var routes = require('./routes');                                    //\n//var user= require('./routes/user');                                  //\n//var http = require('http');                                          //\n//var path = require('path');                                          //\n//                                                                     //\n//var passport = require('passport'), FaceBookStrategy = require('passport-faccbook').Strategy;\n//                                                                     //\n//// serialize                                                         //\n//// 인증 후 사용자 정보를 세션에 저장                                               //\n//passport.serializeUser(function(user, done) {                        //\n//    console.log('serialize');                                        //\n//    done(null,user);                                                 //\n//});                                                                  //\n//                                                                     //\n//// deserialize                                                       //\n//// 인증후, 사용자 정보를 세션에서 읽어서 request.user에 저장                            //\n//passport.deserializeUser(function(user, done) {                      //\n//    //findById(id, function (err, user) {                            //\n//    console.log('deserialize');                                      //\n//    done(null, user);                                                //\n//});                                                                  //\n//                                                                     //\n//passport.use(new FaceBookStrategy({                                  //\n//    clientID: '페이스북 개발자 사이트에서 찾아서 넣으세요',                             //\n//    clientSecret: '페이스북 개발자 사이트에서 찾아서 넣으세요',                         //\n//    callbackURL: \"http://localhost:3000/auth/fackbook/callback\"      //\n//},                                                                   //\n//    function(accessToken, refreshToken, profile, done) {             //\n//        console.log(profile);                                        //\n//        done(null,profile);                                          //\n//    }                                                                //\n//));                                                                  //\n//var app = express();                                                 //\n//                                                                     //\n//// all environments                                                  //\n//app.set('port', process.env.PORT || 3000);                           //\n//app.set('views', path.join(_dirname,'views'));                       //\n//app.set('view engine', 'ejs');                                       //\n//app.use(express.favicon());                                          //\n//app.use(express.logger('dev'));                                      //\n//app.use(express.json());                                             //\n//app.use(express.urlencoded());                                       //\n//app.use(express.methodOverride());                                   //\n//app.use(express.session({ secret: 'your secret here'}));             //\n//app.use(passport.initialize());                                      //\n//app.use(passport.session());                                         //\n//app.use(app.router);                                                 //\n//app.use(express.static(path.join(_dirname, 'public')));              //\n//                                                                     //\n//// development only                                                  //\n//if('development' == app.get('env')) {                                //\n//    app.use(exress.errorHandler());                                  //\n//}                                                                    //\n//                                                                     //\n//app.get('/auth/facebook', passport.authenticate('facebook'));        //\n//app.get('/auth/facebook/callback',                                   //\n//    passport.authenticate('facebook', { successRedirect: '/login_success',\n//        failureRedirect: '/login_fail' }));                          //\n//app.get('/login_success', ensureAuthenticated, function(req, res){   //\n//    res.send(req.user);                                              //\n//});                                                                  //\n//app.get('/logout', function(req, res) {                              //\n//    req.logout();                                                    //\n//    req.redirect('/');                                               //\n//});                                                                  //\n//function ensureAuthenticated(req, res, next) {                       //\n//    // 로그인이 되어 있으면, 다음 파이프라인으로 진행                                    //\n//    if (req.isAuthenticated()) { return next(); }                    //\n//    // 로그인이 안되어 있으면, login 페이지로 진행                                   //\n//    res.redirect('/');                                               //\n//}                                                                    //\n//                                                                     //\n//http.createServer(app).listen(app.get('port'), function() {          //\n//    console.log('Express server listening on port ' + app.get('port'));\n//});                                                                  //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/DescentGym.js","sourceMap":{"version":3,"sources":["/DescentGym.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,MAAM,CAAC,QAAQ,EAAE;;;;;;;;;;;;;;;AAejB,YAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;AACrB,qBAAa,EAAE,UAAU,KAAK,EAAE;AAC5B,iBAAK,CAAC,cAAc,EAAE,CAAC;AACvB,gBAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;AAChD,gBAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC;AACtD,oBAAQ,CAAC,UAAU,CAAC;AAChB,qBAAK,EAAE,QAAQ;AACf,wBAAQ,EAAE,WAAW;aACxB,CAAC,CAAC;SAEN;KACJ,CAAC,CAAC;;AAEH,YAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AAClB,qBAAa,EAAE,UAAS,KAAK,EAAE;AAC3B,iBAAK,CAAC,cAAc,EAAE,CAAC;AACvB,gBAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;AAC7C,gBAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;AACnD,kBAAM,CAAC,iBAAiB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;SACnD;KACJ,CAAC,CAAC;CACN;;AAED,QAAQ,CAAC,UAAU,CAAC;AAChB,SAAK,EAAG,QAAQ;AAChB,YAAQ,EAAE,WAAW;CACxB,CAAC,CAAC","file":"/DescentGym.js","sourcesContent":["if (Meteor.isClient) {\n    //Template.body.events({\n    //    \"submit form\": function (event) {\n    //\n    //        var userName = event.target.username.value;\n    //        var Email = event.target.email.value;\n    //        var Psw = event.target.psw.value;\n    //\n    //\n    //    },\n    //    \"click #myBtn\": function () {\n    //        $(\"#myModal\").modal();\n    //    }\n    //});\n\n    Template.register.events({\n        'submit form': function (event) {\n            event.preventDefault();\n            var emailVar = event.target.registerEmail.value;\n            var passwordVar = event.target.registerPassword.value;\n            Accounts.createUser({\n                email: emailVar,\n                password: passwordVar\n            });\n            \n        }\n    });\n\n    Template.login.events({\n        'submit form': function(event) {\n            event.preventDefault();\n            var emailVar = event.target.loginEmail.value;\n            var passwordVar = event.target.loginPassword.value;\n            Meteor.loginWithPassword(emailVar, passwordVar);\n        }\n    });\n}\n\nAccounts.createUser({\n    email : emailVar,\n    password: passwordVar\n});\n//$(document).ready(function(){\n//    $(\"#myBtn\").click(function(){\n//        $(\"#myModal\").modal();\n//    });\n//});\n\n//Tasks = new Mongo.Collection(\"tasks\");\n//\n//if (Meteor.isClient) {\n//  // This code only runs on the client\n//  Template.body.helpers({\n//    tasks: function () {\n//      return Tasks.find({});\n//    }\n//  });\n//\n//  Template.body.events({\n//    \"submit .new-task\": function (event) {\n//      // Prevent default browser form submit\n//      event.preventDefault();\n//\n//      // Get value from form element\n//      var text = event.target.text.value;\n//\n//      // Insert a task into the collection\n//      Tasks.insert({\n//        text: text,\n//        createdAt: new Date(), // current time\n//        ower: Meteor.userId(),\n//        username: Meteor.user().username\n//      });\n//\n//      // Clear form\n//      event.target.text.value = \"\";\n//    },\n//    \"change .hide-completed input\": function (event) {\n//      Session.set(\"hideCompleted\", event.target.checked);\n//    }\n//  });\n//\n//  Template.body.helpers({\n//    tasks: function() {\n//      if (Session.get(\"hideCompleted\")) {\n//        return Tasks.find({checked: {$ne: true}}, {sort: {createAt: -1}});\n//      } else {\n//        return Tasks.find({},{sort: {createAT: -1}});\n//      }\n//    },\n//    hideCompleted: function () {\n//      return Session.get(\"highCompleted\");\n//    },\n//    incompleteCount: function() {\n//      return Tasks.find({checked: {$ne: true}}).count();\n//    }\n//  });\n//\n//  Template.task.events({\n//    \"click .toggle-checked\": function () {\n//      // Set the checked property to the opposite of its current value\n//      Tasks.update(this._id, {\n//        $set: {checked: ! this.checked}\n//      });\n//    },\n//    \"click .delete\": function () {\n//      Tasks.remove(this._id);\n//    }\n//  });\n//\n//  Accounts.ui.config({\n//    passwordSignupFields: \"USERNAME_ONLY\"\n//  });\n//}\n\n//var express = require('express');\n//var routes = require('./routes');\n//var user= require('./routes/user');\n//var http = require('http');\n//var path = require('path');\n//\n//var passport = require('passport'), FaceBookStrategy = require('passport-faccbook').Strategy;\n//\n//// serialize\n//// 인증 후 사용자 정보를 세션에 저장\n//passport.serializeUser(function(user, done) {\n//    console.log('serialize');\n//    done(null,user);\n//});\n//\n//// deserialize\n//// 인증후, 사용자 정보를 세션에서 읽어서 request.user에 저장\n//passport.deserializeUser(function(user, done) {\n//    //findById(id, function (err, user) {\n//    console.log('deserialize');\n//    done(null, user);\n//});\n//\n//passport.use(new FaceBookStrategy({\n//    clientID: '페이스북 개발자 사이트에서 찾아서 넣으세요',\n//    clientSecret: '페이스북 개발자 사이트에서 찾아서 넣으세요',\n//    callbackURL: \"http://localhost:3000/auth/fackbook/callback\"\n//},\n//    function(accessToken, refreshToken, profile, done) {\n//        console.log(profile);\n//        done(null,profile);\n//    }\n//));\n//var app = express();\n//\n//// all environments\n//app.set('port', process.env.PORT || 3000);\n//app.set('views', path.join(_dirname,'views'));\n//app.set('view engine', 'ejs');\n//app.use(express.favicon());\n//app.use(express.logger('dev'));\n//app.use(express.json());\n//app.use(express.urlencoded());\n//app.use(express.methodOverride());\n//app.use(express.session({ secret: 'your secret here'}));\n//app.use(passport.initialize());\n//app.use(passport.session());\n//app.use(app.router);\n//app.use(express.static(path.join(_dirname, 'public')));\n//\n//// development only\n//if('development' == app.get('env')) {\n//    app.use(exress.errorHandler());\n//}\n//\n//app.get('/auth/facebook', passport.authenticate('facebook'));\n//app.get('/auth/facebook/callback',\n//    passport.authenticate('facebook', { successRedirect: '/login_success',\n//        failureRedirect: '/login_fail' }));\n//app.get('/login_success', ensureAuthenticated, function(req, res){\n//    res.send(req.user);\n//});\n//app.get('/logout', function(req, res) {\n//    req.logout();\n//    req.redirect('/');\n//});\n//function ensureAuthenticated(req, res, next) {\n//    // 로그인이 되어 있으면, 다음 파이프라인으로 진행\n//    if (req.isAuthenticated()) { return next(); }\n//    // 로그인이 안되어 있으면, login 페이지로 진행\n//    res.redirect('/');\n//}\n//\n//http.createServer(app).listen(app.get('port'), function() {\n//    console.log('Express server listening on port ' + app.get('port'));\n//});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// HomeGymTest.js                                                      //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created by User on 2016-06-09.                                      //\n */                                                                    //\nRouter.configure({                                                     // 4\n    //postsList 루트가 언제 준비(ready)상태인지를 아는 것은 우리가 빈 템플릿을 보여줄 것이라면 대단한 일은 아니다. 다행히, Iron Router는 준비가 될 때까지 템플릿을 보여주는 것을 연기하고, 대신 loading 템플릿을 보여주는 빌트인 방식을 제공한다.\n    layoutTemplate: 'layout', // layout 템플릿                            // 6\n    loadingTemplate: 'loading',                                        // 7\n    notFoundTemplate: 'notFound'                                       // 8\n});                                                                    //\n                                                                       //\n//Router.route('/home', {name:'home'});                                //\n//Router.route('/contact', {name:'contact'}); // name안에 템플릿 속성들 들고 온다.\n//Router.route('/press' , {                                            //\n//  name: 'press',                                                     //\n//      waitOn: function (){                                           //\n//    console.log(\"contact waitOn\");                                   //\n//  }                                                                  //\n//});                                                                  //\n// 방법 2) name 가져오기                                                     //\n//Router.route('/about', function(){this.render('about')}); // 방법 1) 템플릿 가져오기\n                                                                       //\nRouter.route('/home', { name: 'home' });                               // 22\nRouter.route('/rotation', { name: 'rotation' });                       // 23\nRouter.route('/feed', { name: 'feed' });                               // 24\nRouter.route('/myinfo', { name: 'myinfo' });                           // 25\nRouter.route('/posttest', { name: 'posttest' });                       // 26\n                                                                       //\n// Make sure it's in client                                            //\nif (Meteor.isClient) {                                                 // 30\n    Session.setDefault('counter', 0);                                  // 31\n    var player;                                                        // 32\n    var y1, y2;                                                        // 33\n    var playlist;                                                      // 34\n    var print;                                                         // 35\n    // The below function \"onYouTubePlayerAPIReady\" or \"onYouTubeIframeAPIReady\" creates an <iframe> (and YouTube player) on the element with id=\"player\" after the API code downloads.\n    // The API will call this function when the page has finished downloading the JavaScript for the player API, which enables you to then use the API on your page. Thus, this function might create the player objects that you want to display when the page loads.\n    onYouTubeIframeAPIReady = function () {                            // 38\n        player = new YT.Player('id-player', {                          // 39\n            videoId: 'u1zgFlCw8Aw',                                    // 40\n            events: {                                                  // 41\n                'onStateChange': function (event) {                    // 42\n                    var i = event.data;                                // 43\n                    switch (i) {                                       // 44\n                        case YT.PlayerState.UNSTARTED:                 // 45\n                            // -1                                      //\n                            console.log(i + ' : unstarted');           // 46\n                            break;                                     // 47\n                        case YT.PlayerState.ENDED:                     // 47\n                            // 0                                       //\n                            console.log(i + ' : ended');               // 49\n                            break;                                     // 50\n                        case YT.PlayerState.PLAYING:                   // 50\n                            // 1                                       //\n                            console.log(i + ' : playing');             // 52\n                            break;                                     // 53\n                        case YT.PlayerState.PAUSED:                    // 53\n                            // 2                                       //\n                            console.log(i + ' : paused');              // 55\n                            break;                                     // 56\n                        case YT.PlayerState.BUFFERING:                 // 57\n                            // 3                                       //\n                            console.log(i + ' : buffering');           // 58\n                            break;                                     // 59\n                        case YT.PlayerState.CUED:                      // 59\n                            // 5, 이건 언제 호출되는겨?                         //\n                            console.log(i + ' : video cued');          // 61\n                            break;                                     // 62\n                    }                                                  // 62\n                }                                                      //\n            }                                                          //\n        });                                                            //\n        print = setInterval(function () {                              // 67\n            if (player.playVideo) {                                    // 68\n                clearInterval(print);                                  // 69\n                var str = \"// All properties of player : at \" + new Date().toLocaleTimeString();\n                for (var p in babelHelpers.sanitizeForInObject(player)) {\n                    str += \"\\n\" + p + \" : \" + player[p];               // 72\n                }                                                      //\n                var $result = $(\"#player-properties\");                 // 74\n                $result.html(kipid.escapeHTML(str));                   // 75\n                $result.removeClass(\"prettyprinted\");                  // 76\n                prettyPrint(function () {}, $result.parent()[0]);      // 77\n            }                                                          //\n        }, 2000); // Without setTimeout or setInterval, play/pause 같은 동영상을 컨트롤하는 function 들이 안찍힘. 아마도 동영상을 load 하고나서 function 들을 추가시켜서 그런듯?\n                                                                       //\n        // 이어서 재생하기.                                                   //\n        y1 = new YT.Player($('#youtube-1')[0], // id 대신 DOM element 를 넣어도 됨.\n        {                                                              // 83\n            videoId: 'bHQqvYy5KYo',                                    // 84\n            playerVars: { theme: \"light\", color: \"white\", start: 10, end: 600 },\n            events: { 'onStateChange': function (e) {                  // 86\n                    if (e.data === YT.PlayerState.ENDED) {             // 87\n                        $(window).scrollTop($(\"#youtube-2\").offset().top);\n                        y2.playVideo();                                // 89\n                    }                                                  //\n                }                                                      //\n            }                                                          //\n        });                                                            //\n        y2 = new YT.Player('youtube-2', {                              // 94\n            videoId: 'u1zgFlCw8Aw',                                    // 95\n            events: {}                                                 // 96\n        });                                                            //\n                                                                       //\n        // Loop                                                        //\n        new YT.Player('youtube-loop', {                                // 100\n            videoId: 'Skhwqq-iGQM',                                    // 101\n            playerVars: { loop: 1 }, // 동작 안함.                         // 102\n            events: { 'onStateChange': function (e) {                  // 103\n                    if (e.data === YT.PlayerState.ENDED) {             // 104\n                        e.target.playVideo();                          // 105\n                    }                                                  //\n                }                                                      //\n            }                                                          //\n        });                                                            //\n                                                                       //\n        playlist = new YT.Player('youtube-playlist', {                 // 111\n            events: { 'onReady': function (e) {                        // 112\n                    var p = e.target;                                  // 113\n                    p.cuePlaylist([\"Skhwqq-iGQM\" // Zion.T (자이언티), Crush (크러쉬) - Just (그냥)\n                    , \"R0W-voiYpQk\" // K.will (케이윌), Mamamoo (마마무), Feat. Whee sung (휘성) - Peppermint Chocolate (썸남썸녀)\n                    , \"ftCCmMeqXds\" // 에디킴 (Eddy Kim) - 밀당의 고수 (Push & Pull)\n                    , \"t0x98vf62_k\" // 에디킴 (Eddy Kim) - My Love        //\n                    , \"t0x98vf62_0\" // error : This video is unavailable. => Not included in the playlist at the first place.\n                    , \"J-nsu2K8Z8s\" // KARA - So Good : The uploader has not made this video available in your country. => 105 error.\n                    , \"OPf0YbXqDm0\" // Mark Ronson - Uptown Funk       //\n                    , \"pB-5XG-DbAA\" // Sam Smith - Stay With Me        //\n                    , \"gEqlF5N8UMs\" // Winner - 공허해                    //\n                    ]);                                                //\n                    p.setLoop(true);                                   // 125\n                    // p.setShuffle(true);                             //\n                }, 'onError': function (e) {                           //\n                    console.log(e.data);                               // 128\n                    e.target.nextVideo();                              // 129\n                }, 'onStateChange': function (e) {                     //\n                    var i = e.data;                                    // 131\n                    console.log(i);                                    // 132\n                    switch (i) {                                       // 133\n                        case YT.PlayerState.UNSTARTED:                 // 134\n                            // -1                                      //\n                            console.log(i + ' : playlist unstarted');  // 135\n                            break;                                     // 136\n                        case YT.PlayerState.ENDED:                     // 137\n                            // 0                                       //\n                            console.log(i + ' : playlist ended');      // 138\n                            console.log('Current Playlist Index : ' + e.target.getPlaylistIndex());\n                            // For 1-loop                              //\n                            // e.target.playVideoAt(e.target.getPlaylistIndex()-1);\n                            // or                                      //\n                            // e.target.previousVideo(); // 이러면 다음 비디오로 간 다음에 가는데도 그 전전 영상으로 가버리네? 결과적으로 역재생인듯한.\n                            break;                                     // 144\n                        case YT.PlayerState.PLAYING:                   // 144\n                            // 1                                       //\n                            console.log(i + ' : playlist playing');    // 146\n                            break;                                     // 147\n                        case YT.PlayerState.PAUSED:                    // 147\n                            // 2                                       //\n                            console.log(i + ' : playlist paused');     // 149\n                            break;                                     // 150\n                        case YT.PlayerState.BUFFERING:                 // 150\n                            // 3                                       //\n                            console.log(i + ' : playlist buffering');  // 152\n                            break;                                     // 153\n                        case YT.PlayerState.CUED:                      // 153\n                            // 5                                       //\n                            console.log(i + ' : playlist video cued');\n                            break;                                     // 156\n                    }                                                  // 156\n                } }                                                    //\n        });                                                            //\n    };                                                                 //\n                                                                       //\n    // Loading a youtube video by a function.                          //\n    $(\"#load-youtube\").on(\"click\", function () {                       // 163\n        new YT.Player('load-youtube-target', {                         // 164\n            videoId: 'bHQqvYy5KYo'                                     // 165\n        });                                                            //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/HomeGymTest.js","sourceMap":{"version":3,"sources":["/HomeGymTest.js"],"names":[],"mappings":"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","file":"/HomeGymTest.js","sourcesContent":["/**\r\n * Created by User on 2016-06-09.\r\n */\r\nRouter.configure({\r\n    //postsList 루트가 언제 준비(ready)상태인지를 아는 것은 우리가 빈 템플릿을 보여줄 것이라면 대단한 일은 아니다. 다행히, Iron Router는 준비가 될 때까지 템플릿을 보여주는 것을 연기하고, 대신 loading 템플릿을 보여주는 빌트인 방식을 제공한다.\r\n    layoutTemplate: 'layout', // layout 템플릿\r\n    loadingTemplate: 'loading',\r\n    notFoundTemplate: 'notFound'\r\n});\r\n\r\n//Router.route('/home', {name:'home'});\r\n//Router.route('/contact', {name:'contact'}); // name안에 템플릿 속성들 들고 온다.\r\n//Router.route('/press' , {\r\n//  name: 'press',\r\n//      waitOn: function (){\r\n//    console.log(\"contact waitOn\");\r\n//  }\r\n//});\r\n// 방법 2) name 가져오기\r\n//Router.route('/about', function(){this.render('about')}); // 방법 1) 템플릿 가져오기\r\n\r\nRouter.route('/home',{name:'home'});\r\nRouter.route('/rotation',{name:'rotation'});\r\nRouter.route('/feed',{name:'feed'});\r\nRouter.route('/myinfo',{name:'myinfo'});\r\nRouter.route('/posttest', {name:'posttest'});\r\n\r\n\r\n// Make sure it's in client\r\nif (Meteor.isClient) {\r\n    Session.setDefault('counter',0);\r\n    var player;\r\n    var y1, y2;\r\n    var playlist;\r\n    var print;\r\n    // The below function \"onYouTubePlayerAPIReady\" or \"onYouTubeIframeAPIReady\" creates an <iframe> (and YouTube player) on the element with id=\"player\" after the API code downloads.\r\n    // The API will call this function when the page has finished downloading the JavaScript for the player API, which enables you to then use the API on your page. Thus, this function might create the player objects that you want to display when the page loads.\r\n    onYouTubeIframeAPIReady = function(){\r\n        player=new YT.Player('id-player', {\r\n            videoId:'u1zgFlCw8Aw'\r\n            , events:{\r\n                'onStateChange':function(event) {\r\n                    var i=event.data;\r\n                    switch (i) {\r\n                        case YT.PlayerState.UNSTARTED: // -1\r\n                            console.log(i+' : unstarted');\r\n                            break;\r\n                        case YT.PlayerState.ENDED: // 0\r\n                            console.log(i+' : ended');\r\n                            break;\r\n                        case YT.PlayerState.PLAYING: // 1\r\n                            console.log(i+' : playing');\r\n                            break;\r\n                        case YT.PlayerState.PAUSED: // 2\r\n                            console.log(i+' : paused');\r\n                            break;\r\n                        case YT.PlayerState.BUFFERING: // 3\r\n                            console.log(i+' : buffering');\r\n                            break;\r\n                        case YT.PlayerState.CUED: // 5, 이건 언제 호출되는겨?\r\n                            console.log(i+' : video cued');\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        print=setInterval(function() {\r\n            if (player.playVideo) {\r\n                clearInterval(print);\r\n                var str=\"// All properties of player : at \"+new Date().toLocaleTimeString();\r\n                for (var p in player) {\r\n                    str+=\"\\n\"+p+\" : \"+player[p];\r\n                }\r\n                var $result=$(\"#player-properties\");\r\n                $result.html( kipid.escapeHTML(str) );\r\n                $result.removeClass(\"prettyprinted\");\r\n                prettyPrint(function(){}, $result.parent()[0]);\r\n            }\r\n        }, 2000); // Without setTimeout or setInterval, play/pause 같은 동영상을 컨트롤하는 function 들이 안찍힘. 아마도 동영상을 load 하고나서 function 들을 추가시켜서 그런듯?\r\n\r\n        // 이어서 재생하기.\r\n        y1=new YT.Player($('#youtube-1')[0] // id 대신 DOM element 를 넣어도 됨.\r\n            , {\r\n                videoId:'bHQqvYy5KYo'\r\n                , playerVars:{theme:\"light\", color:\"white\", start:10, end:600}\r\n                , events:{'onStateChange':function(e) {\r\n                    if (e.data===YT.PlayerState.ENDED) {\r\n                        $(window).scrollTop($(\"#youtube-2\").offset().top);\r\n                        y2.playVideo();\r\n                    }\r\n                }\r\n                }\r\n            });\r\n        y2=new YT.Player('youtube-2', {\r\n            videoId:'u1zgFlCw8Aw'\r\n            , events:{}\r\n        });\r\n\r\n        // Loop\r\n        new YT.Player('youtube-loop', {\r\n            videoId:'Skhwqq-iGQM'\r\n            , playerVars:{loop:1} // 동작 안함.\r\n            , events:{'onStateChange':function(e) {\r\n                if (e.data===YT.PlayerState.ENDED) {\r\n                    e.target.playVideo();\r\n                }\r\n            }\r\n            }\r\n        });\r\n\r\n        playlist=new YT.Player('youtube-playlist', {\r\n            events:{'onReady':function(e) {\r\n                var p=e.target;\r\n                p.cuePlaylist([\r\n                    \"Skhwqq-iGQM\" // Zion.T (자이언티), Crush (크러쉬) - Just (그냥)\r\n                    , \"R0W-voiYpQk\" // K.will (케이윌), Mamamoo (마마무), Feat. Whee sung (휘성) - Peppermint Chocolate (썸남썸녀)\r\n                    , \"ftCCmMeqXds\" // 에디킴 (Eddy Kim) - 밀당의 고수 (Push & Pull)\r\n                    , \"t0x98vf62_k\" // 에디킴 (Eddy Kim) - My Love\r\n                    , \"t0x98vf62_0\" // error : This video is unavailable. => Not included in the playlist at the first place.\r\n                    , \"J-nsu2K8Z8s\" // KARA - So Good : The uploader has not made this video available in your country. => 105 error.\r\n                    , \"OPf0YbXqDm0\" // Mark Ronson - Uptown Funk\r\n                    , \"pB-5XG-DbAA\" // Sam Smith - Stay With Me\r\n                    , \"gEqlF5N8UMs\" // Winner - 공허해\r\n                ]);\r\n                p.setLoop(true);\r\n                // p.setShuffle(true);\r\n            }, 'onError':function(e) {\r\n                console.log(e.data);\r\n                e.target.nextVideo();\r\n            }, 'onStateChange':function(e) {\r\n                var i=e.data;\r\n                console.log(i);\r\n                switch (i) {\r\n                    case YT.PlayerState.UNSTARTED: // -1\r\n                        console.log(i+' : playlist unstarted');\r\n                        break;\r\n                    case YT.PlayerState.ENDED: // 0\r\n                        console.log(i+' : playlist ended');\r\n                        console.log('Current Playlist Index : '+e.target.getPlaylistIndex());\r\n                        // For 1-loop\r\n                        // e.target.playVideoAt(e.target.getPlaylistIndex()-1);\r\n                        // or\r\n                        // e.target.previousVideo(); // 이러면 다음 비디오로 간 다음에 가는데도 그 전전 영상으로 가버리네? 결과적으로 역재생인듯한.\r\n                        break;\r\n                    case YT.PlayerState.PLAYING: // 1\r\n                        console.log(i+' : playlist playing');\r\n                        break;\r\n                    case YT.PlayerState.PAUSED: // 2\r\n                        console.log(i+' : playlist paused');\r\n                        break;\r\n                    case YT.PlayerState.BUFFERING: // 3\r\n                        console.log(i+' : playlist buffering');\r\n                        break;\r\n                    case YT.PlayerState.CUED: // 5\r\n                        console.log(i+' : playlist video cued');\r\n                        break;\r\n                }\r\n            }}\r\n        });\r\n    }\r\n\r\n    // Loading a youtube video by a function.\r\n    $(\"#load-youtube\").on(\"click\", function() {\r\n        new YT.Player('load-youtube-target', {\r\n            videoId:'bHQqvYy5KYo'\r\n        });\r\n    });\r\n}"]}}]