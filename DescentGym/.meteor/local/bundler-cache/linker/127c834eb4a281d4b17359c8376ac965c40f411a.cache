[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// DescentGym.js                                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nif (Meteor.isClient) {                                                 // 1\n  Template.body.events({                                               // 2\n    \"click #email\": function () {                                      // 3\n      console.log(\"ì‹¤í–‰\");                                               // 4\n      document.getElementById(\"test\").style.display;                   // 5\n    }                                                                  //\n  });                                                                  //\n}                                                                      //\n                                                                       //\n//Tasks = new Mongo.Collection(\"tasks\");                               //\n//                                                                     //\n//if (Meteor.isClient) {                                               //\n//  // This code only runs on the client                               //\n//  Template.body.helpers({                                            //\n//    tasks: function () {                                             //\n//      return Tasks.find({});                                         //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Template.body.events({                                             //\n//    \"submit .new-task\": function (event) {                           //\n//      // Prevent default browser form submit                         //\n//      event.preventDefault();                                        //\n//                                                                     //\n//      // Get value from form element                                 //\n//      var text = event.target.text.value;                            //\n//                                                                     //\n//      // Insert a task into the collection                           //\n//      Tasks.insert({                                                 //\n//        text: text,                                                  //\n//        createdAt: new Date(), // current time                       //\n//        ower: Meteor.userId(),                                       //\n//        username: Meteor.user().username                             //\n//      });                                                            //\n//                                                                     //\n//      // Clear form                                                  //\n//      event.target.text.value = \"\";                                  //\n//    },                                                               //\n//    \"change .hide-completed input\": function (event) {               //\n//      Session.set(\"hideCompleted\", event.target.checked);            //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Template.body.helpers({                                            //\n//    tasks: function() {                                              //\n//      if (Session.get(\"hideCompleted\")) {                            //\n//        return Tasks.find({checked: {$ne: true}}, {sort: {createAt: -1}});\n//      } else {                                                       //\n//        return Tasks.find({},{sort: {createAT: -1}});                //\n//      }                                                              //\n//    },                                                               //\n//    hideCompleted: function () {                                     //\n//      return Session.get(\"highCompleted\");                           //\n//    },                                                               //\n//    incompleteCount: function() {                                    //\n//      return Tasks.find({checked: {$ne: true}}).count();             //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Template.task.events({                                             //\n//    \"click .toggle-checked\": function () {                           //\n//      // Set the checked property to the opposite of its current value\n//      Tasks.update(this._id, {                                       //\n//        $set: {checked: ! this.checked}                              //\n//      });                                                            //\n//    },                                                               //\n//    \"click .delete\": function () {                                   //\n//      Tasks.remove(this._id);                                        //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Accounts.ui.config({                                               //\n//    passwordSignupFields: \"USERNAME_ONLY\"                            //\n//  });                                                                //\n//}                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/DescentGym.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/DescentGym.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,UAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACnB,kBAAc,EAAE,YAAY;AAC1B,aAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,cAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,OAAO;KAC9C;GACF,CAAC;CACH","file":"/DescentGym.js","sourcesContent":["if (Meteor.isClient) {\n  Template.body.events({\n    \"click #email\": function () {\n      console.log(\"ì‹¤í–‰\");\n      document.getElementById(\"test\").style.display\n    }\n  })\n}\n\n//Tasks = new Mongo.Collection(\"tasks\");\n//\n//if (Meteor.isClient) {\n//  // This code only runs on the client\n//  Template.body.helpers({\n//    tasks: function () {\n//      return Tasks.find({});\n//    }\n//  });\n//\n//  Template.body.events({\n//    \"submit .new-task\": function (event) {\n//      // Prevent default browser form submit\n//      event.preventDefault();\n//\n//      // Get value from form element\n//      var text = event.target.text.value;\n//\n//      // Insert a task into the collection\n//      Tasks.insert({\n//        text: text,\n//        createdAt: new Date(), // current time\n//        ower: Meteor.userId(),\n//        username: Meteor.user().username\n//      });\n//\n//      // Clear form\n//      event.target.text.value = \"\";\n//    },\n//    \"change .hide-completed input\": function (event) {\n//      Session.set(\"hideCompleted\", event.target.checked);\n//    }\n//  });\n//\n//  Template.body.helpers({\n//    tasks: function() {\n//      if (Session.get(\"hideCompleted\")) {\n//        return Tasks.find({checked: {$ne: true}}, {sort: {createAt: -1}});\n//      } else {\n//        return Tasks.find({},{sort: {createAT: -1}});\n//      }\n//    },\n//    hideCompleted: function () {\n//      return Session.get(\"highCompleted\");\n//    },\n//    incompleteCount: function() {\n//      return Tasks.find({checked: {$ne: true}}).count();\n//    }\n//  });\n//\n//  Template.task.events({\n//    \"click .toggle-checked\": function () {\n//      // Set the checked property to the opposite of its current value\n//      Tasks.update(this._id, {\n//        $set: {checked: ! this.checked}\n//      });\n//    },\n//    \"click .delete\": function () {\n//      Tasks.remove(this._id);\n//    }\n//  });\n//\n//  Accounts.ui.config({\n//    passwordSignupFields: \"USERNAME_ONLY\"\n//  });\n//}\n\n"]}}]