[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw('<div class=\"container\">\\n    <h2>DESCENTE</h2>\\n    <h1>GYM</h1>\\n</div>\\n\\n<button type=\"button\" class=\"btn btn-info\">FACEBOOKÏúºÎ°ú Í≥ÑÏÜçÌïòÍ∏∞</button>\\n<!--<button type=\"button\" class=\"btn btn-info\">E-mailÎ°ú Í∞ÄÏûÖÌïòÍ∏∞</button>-->\\n\\n\\n<div class=\"container\">\\n    <h2>Modal Login Example</h2>\\n    <!-- Trigger the modal with a button -->\\n    <button type=\"button\" class=\"btn btn-success btn-lg\" id=\"myBtn\">E-maiÎ°ú Í∞ÄÏûÖÌïòÍ∏∞</button>\\n\\n    <!-- Modal -->\\n    <div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\\n        <div class=\"modal-dialog\">\\n\\n            <!-- Modal content-->\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\" style=\"padding:35px 50px;\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4><span class=\"glyphicon glyphicon-lock\"></span> Login</h4>\\n                </div>\\n                <div class=\"modal-body\" style=\"padding:40px 50px;\">\\n                    <form role=\"form\">\\n                        <div class=\"form-group\">\\n                            <label for=\"usrname\"><span class=\"glyphicon glyphicon-user\"></span> Username</label>\\n                            <input type=\"text\" class=\"form-control\" id=\"usrname\" placeholder=\"username\">\\n                        </div>\\n                        <div class=\"form-group\">\\n                            <label for=\"email\"><span class=\"glyphicon glyphicon-envelope\"></span> Email</label>\\n                            <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"email\">\\n                        </div>\\n                        <div class=\"form-group\">\\n                            <label for=\"psw\"><span class=\"glyphicon glyphicon-lock\"></span> Password</label>\\n                            <input type=\"text\" class=\"form-control\" id=\"psw\" placeholder=\"Enter password\">\\n                        </div>\\n                        <div class=\"checkbox\">\\n                            <label><input type=\"checkbox\" value=\"\" checked=\"\">ÎÇ®Ïûê</label>\\n                            <label><input type=\"checkbox\" value=\"\" chceked=\"\">Ïó¨Ïûê</label>\\n                        </div>\\n                        <button type=\"submit\" class=\"btn btn-success btn-block\"><span class=\"glyphicon glyphicon-off\"></span> Login</button>\\n                        <button type=\"submit\" class=\"btn btn-danger btn-block\" data-dismiss=\"modal\"><span class=\"glyphicon glyphicon-remove\"></span> Cancel</button>\\n                    </form>\\n                </div>\\n                <div class=\"modal-footer\">\\n                    <p>Not a member? <a href=\"#\">Sign Up</a></p>\\n                    <p>Forgot <a href=\"#\">Password?</a></p>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n'), HTML.SCRIPT('\\n    $(document).ready(function(){\\n        $(\"#myBtn\").click(function(){\\n            $(\"#myModal\").modal();\\n        });\\n    });\\n'), \"\\n\\n\", HTML.SCRIPT(\"\\n    $(document).ready(function(){\\n\\n    })\\n\") ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n}).call(this);\n","servePath":"/template.DescentGym.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/template.DescentGym.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA","file":"/template.DescentGym.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw('<div class=\"container\">\\n    <h2>DESCENTE</h2>\\n    <h1>GYM</h1>\\n</div>\\n\\n<button type=\"button\" class=\"btn btn-info\">FACEBOOKÏúºÎ°ú Í≥ÑÏÜçÌïòÍ∏∞</button>\\n<!--<button type=\"button\" class=\"btn btn-info\">E-mailÎ°ú Í∞ÄÏûÖÌïòÍ∏∞</button>-->\\n\\n\\n<div class=\"container\">\\n    <h2>Modal Login Example</h2>\\n    <!-- Trigger the modal with a button -->\\n    <button type=\"button\" class=\"btn btn-success btn-lg\" id=\"myBtn\">E-maiÎ°ú Í∞ÄÏûÖÌïòÍ∏∞</button>\\n\\n    <!-- Modal -->\\n    <div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\\n        <div class=\"modal-dialog\">\\n\\n            <!-- Modal content-->\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\" style=\"padding:35px 50px;\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4><span class=\"glyphicon glyphicon-lock\"></span> Login</h4>\\n                </div>\\n                <div class=\"modal-body\" style=\"padding:40px 50px;\">\\n                    <form role=\"form\">\\n                        <div class=\"form-group\">\\n                            <label for=\"usrname\"><span class=\"glyphicon glyphicon-user\"></span> Username</label>\\n                            <input type=\"text\" class=\"form-control\" id=\"usrname\" placeholder=\"username\">\\n                        </div>\\n                        <div class=\"form-group\">\\n                            <label for=\"email\"><span class=\"glyphicon glyphicon-envelope\"></span> Email</label>\\n                            <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"email\">\\n                        </div>\\n                        <div class=\"form-group\">\\n                            <label for=\"psw\"><span class=\"glyphicon glyphicon-lock\"></span> Password</label>\\n                            <input type=\"text\" class=\"form-control\" id=\"psw\" placeholder=\"Enter password\">\\n                        </div>\\n                        <div class=\"checkbox\">\\n                            <label><input type=\"checkbox\" value=\"\" checked=\"\">ÎÇ®Ïûê</label>\\n                            <label><input type=\"checkbox\" value=\"\" chceked=\"\">Ïó¨Ïûê</label>\\n                        </div>\\n                        <button type=\"submit\" class=\"btn btn-success btn-block\"><span class=\"glyphicon glyphicon-off\"></span> Login</button>\\n                        <button type=\"submit\" class=\"btn btn-danger btn-block\" data-dismiss=\"modal\"><span class=\"glyphicon glyphicon-remove\"></span> Cancel</button>\\n                    </form>\\n                </div>\\n                <div class=\"modal-footer\">\\n                    <p>Not a member? <a href=\"#\">Sign Up</a></p>\\n                    <p>Forgot <a href=\"#\">Password?</a></p>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n'), HTML.SCRIPT('\\n    $(document).ready(function(){\\n        $(\"#myBtn\").click(function(){\\n            $(\"#myModal\").modal();\\n        });\\n    });\\n'), \"\\n\\n\", HTML.SCRIPT(\"\\n    $(document).ready(function(){\\n\\n    })\\n\") ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// DescentGym.js                                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n//if (Meteor.isClient) {                                               //\n//  Template.body.events({                                             //\n//    \"submit #email\": function () {                                   //\n//      document.getElementById(\"test\").style.display = \"block\";       //\n//    }                                                                //\n//  })                                                                 //\n//}                                                                    //\n                                                                       //\n//Tasks = new Mongo.Collection(\"tasks\");                               //\n//                                                                     //\n//if (Meteor.isClient) {                                               //\n//  // This code only runs on the client                               //\n//  Template.body.helpers({                                            //\n//    tasks: function () {                                             //\n//      return Tasks.find({});                                         //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Template.body.events({                                             //\n//    \"submit .new-task\": function (event) {                           //\n//      // Prevent default browser form submit                         //\n//      event.preventDefault();                                        //\n//                                                                     //\n//      // Get value from form element                                 //\n//      var text = event.target.text.value;                            //\n//                                                                     //\n//      // Insert a task into the collection                           //\n//      Tasks.insert({                                                 //\n//        text: text,                                                  //\n//        createdAt: new Date(), // current time                       //\n//        ower: Meteor.userId(),                                       //\n//        username: Meteor.user().username                             //\n//      });                                                            //\n//                                                                     //\n//      // Clear form                                                  //\n//      event.target.text.value = \"\";                                  //\n//    },                                                               //\n//    \"change .hide-completed input\": function (event) {               //\n//      Session.set(\"hideCompleted\", event.target.checked);            //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Template.body.helpers({                                            //\n//    tasks: function() {                                              //\n//      if (Session.get(\"hideCompleted\")) {                            //\n//        return Tasks.find({checked: {$ne: true}}, {sort: {createAt: -1}});\n//      } else {                                                       //\n//        return Tasks.find({},{sort: {createAT: -1}});                //\n//      }                                                              //\n//    },                                                               //\n//    hideCompleted: function () {                                     //\n//      return Session.get(\"highCompleted\");                           //\n//    },                                                               //\n//    incompleteCount: function() {                                    //\n//      return Tasks.find({checked: {$ne: true}}).count();             //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Template.task.events({                                             //\n//    \"click .toggle-checked\": function () {                           //\n//      // Set the checked property to the opposite of its current value\n//      Tasks.update(this._id, {                                       //\n//        $set: {checked: ! this.checked}                              //\n//      });                                                            //\n//    },                                                               //\n//    \"click .delete\": function () {                                   //\n//      Tasks.remove(this._id);                                        //\n//    }                                                                //\n//  });                                                                //\n//                                                                     //\n//  Accounts.ui.config({                                               //\n//    passwordSignupFields: \"USERNAME_ONLY\"                            //\n//  });                                                                //\n//}                                                                    //\n                                                                       //\nvar express = require('express');                                      // 76\nvar routes = require('./routes');                                      // 77\nvar user = require('./routes/user');                                   // 78\nvar http = require('http');                                            // 79\nvar path = require('path');                                            // 80\n                                                                       //\nvar passport = require('passport'),                                    // 82\n    FaceBookStrategy = require('passport-faccbook').Strategy;          //\n                                                                       //\n// serialize                                                           //\n// Ïù∏Ï¶ù ÌõÑ ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥Î•º ÏÑ∏ÏÖòÏóê Ï†ÄÏû•                                                 //\npassport.serializeUser(function (user, done) {                         // 86\n    console.log('serialize');                                          // 87\n    done(null, user);                                                  // 88\n});                                                                    //\n                                                                       //\n// deserialize                                                         //\n// Ïù∏Ï¶ùÌõÑ, ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥Î•º ÏÑ∏ÏÖòÏóêÏÑú ÏùΩÏñ¥ÏÑú request.userÏóê Ï†ÄÏû•                              //\npassport.deserializeUser(function (user, done) {                       // 93\n    //findById(id, function (err, user) {                              //\n    console.log('deserialize');                                        // 95\n    done(null, user);                                                  // 96\n});                                                                    //\n                                                                       //\npassport.use(new FaceBookStrategy({                                    // 99\n    clientID: 'ÌéòÏù¥Ïä§Î∂Å Í∞úÎ∞úÏûê ÏÇ¨Ïù¥Ìä∏ÏóêÏÑú Ï∞æÏïÑÏÑú ÎÑ£ÏúºÏÑ∏Ïöî',                               // 100\n    clientSecret: 'ÌéòÏù¥Ïä§Î∂Å Í∞úÎ∞úÏûê ÏÇ¨Ïù¥Ìä∏ÏóêÏÑú Ï∞æÏïÑÏÑú ÎÑ£ÏúºÏÑ∏Ïöî',                           // 101\n    callbackURL: \"http://localhost:3000/auth/fackbook/callback\"        // 102\n}, function (accessToken, refreshToken, profile, done) {               //\n    console.log(profile);                                              // 105\n    done(null, profile);                                               // 106\n}));                                                                   //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/DescentGym.js","sourceMap":{"version":3,"sources":["/DescentGym.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACjC,IAAI,IAAI,GAAE,OAAO,CAAC,eAAe,CAAC,CAAC;AACnC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC;IAAE,gBAAgB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC;;;;AAI7F,QAAQ,CAAC,aAAa,CAAC,UAAS,IAAI,EAAE,IAAI,EAAE;AACxC,WAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,QAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;CACnB,CAAC,CAAC;;;;AAIH,QAAQ,CAAC,eAAe,CAAC,UAAS,IAAI,EAAE,IAAI,EAAE;;AAE1C,WAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,QAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CACpB,CAAC,CAAC;;AAEH,QAAQ,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC;AAC9B,YAAQ,EAAE,yBAAyB;AACnC,gBAAY,EAAE,yBAAyB;AACvC,eAAW,EAAE,8CAA8C;CAC9D,EACG,UAAS,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE;AAC/C,WAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrB,QAAI,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC;CACtB,CACJ,CAAC,CAAC,qE","file":"/DescentGym.js","sourcesContent":["//if (Meteor.isClient) {\n//  Template.body.events({\n//    \"submit #email\": function () {\n//      document.getElementById(\"test\").style.display = \"block\";\n//    }\n//  })\n//}\n\n//Tasks = new Mongo.Collection(\"tasks\");\n//\n//if (Meteor.isClient) {\n//  // This code only runs on the client\n//  Template.body.helpers({\n//    tasks: function () {\n//      return Tasks.find({});\n//    }\n//  });\n//\n//  Template.body.events({\n//    \"submit .new-task\": function (event) {\n//      // Prevent default browser form submit\n//      event.preventDefault();\n//\n//      // Get value from form element\n//      var text = event.target.text.value;\n//\n//      // Insert a task into the collection\n//      Tasks.insert({\n//        text: text,\n//        createdAt: new Date(), // current time\n//        ower: Meteor.userId(),\n//        username: Meteor.user().username\n//      });\n//\n//      // Clear form\n//      event.target.text.value = \"\";\n//    },\n//    \"change .hide-completed input\": function (event) {\n//      Session.set(\"hideCompleted\", event.target.checked);\n//    }\n//  });\n//\n//  Template.body.helpers({\n//    tasks: function() {\n//      if (Session.get(\"hideCompleted\")) {\n//        return Tasks.find({checked: {$ne: true}}, {sort: {createAt: -1}});\n//      } else {\n//        return Tasks.find({},{sort: {createAT: -1}});\n//      }\n//    },\n//    hideCompleted: function () {\n//      return Session.get(\"highCompleted\");\n//    },\n//    incompleteCount: function() {\n//      return Tasks.find({checked: {$ne: true}}).count();\n//    }\n//  });\n//\n//  Template.task.events({\n//    \"click .toggle-checked\": function () {\n//      // Set the checked property to the opposite of its current value\n//      Tasks.update(this._id, {\n//        $set: {checked: ! this.checked}\n//      });\n//    },\n//    \"click .delete\": function () {\n//      Tasks.remove(this._id);\n//    }\n//  });\n//\n//  Accounts.ui.config({\n//    passwordSignupFields: \"USERNAME_ONLY\"\n//  });\n//}\n\nvar express = require('express');\nvar routes = require('./routes');\nvar user= require('./routes/user');\nvar http = require('http');\nvar path = require('path');\n\nvar passport = require('passport'), FaceBookStrategy = require('passport-faccbook').Strategy;\n\n// serialize\n// Ïù∏Ï¶ù ÌõÑ ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥Î•º ÏÑ∏ÏÖòÏóê Ï†ÄÏû•\npassport.serializeUser(function(user, done) {\n    console.log('serialize');\n    done(null,user);\n});\n\n// deserialize\n// Ïù∏Ï¶ùÌõÑ, ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥Î•º ÏÑ∏ÏÖòÏóêÏÑú ÏùΩÏñ¥ÏÑú request.userÏóê Ï†ÄÏû•\npassport.deserializeUser(function(user, done) {\n    //findById(id, function (err, user) {\n    console.log('deserialize');\n    done(null, user);\n});\n\npassport.use(new FaceBookStrategy({\n    clientID: 'ÌéòÏù¥Ïä§Î∂Å Í∞úÎ∞úÏûê ÏÇ¨Ïù¥Ìä∏ÏóêÏÑú Ï∞æÏïÑÏÑú ÎÑ£ÏúºÏÑ∏Ïöî',\n    clientSecret: 'ÌéòÏù¥Ïä§Î∂Å Í∞úÎ∞úÏûê ÏÇ¨Ïù¥Ìä∏ÏóêÏÑú Ï∞æÏïÑÏÑú ÎÑ£ÏúºÏÑ∏Ïöî',\n    callbackURL: \"http://localhost:3000/auth/fackbook/callback\"\n},\n    function(accessToken, refreshToken, profile, done) {\n        console.log(profile);\n        done(null,profile);\n    }\n));\n\n\n"]}}]