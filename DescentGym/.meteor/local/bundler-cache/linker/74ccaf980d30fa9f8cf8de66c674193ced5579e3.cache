[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw('<div class=\"container\"></div>\\n\\n<div id=\"side\">\\n    London\\n</div>\\n    <!--<header>-->\\n        <!--<p>나에게 맞추어진 모바일 트레이너</p>-->\\n        <!--<h1>DESCENTE GYM</h1>-->\\n        <!--<p><small>나의 트레이닝 레벨을 진단하고</small></p>-->\\n        <!--<p><small>레벨에 맞는 프로그램으로 운동하세요.</small></p>-->\\n\\n\\n        <!--&lt;!&ndash;<form>&ndash;&gt;-->\\n            <!--&lt;!&ndash;ID:<br>&ndash;&gt;-->\\n            <!--&lt;!&ndash;<input type=\"text\" name=\"ID\">&ndash;&gt;-->\\n            <!--&lt;!&ndash;<br>&ndash;&gt;-->\\n            <!--&lt;!&ndash;PassWord:<br>&ndash;&gt;-->\\n            <!--&lt;!&ndash;<input type=\"text\" name=\"PassWord\">&ndash;&gt;-->\\n        <!--&lt;!&ndash;</form>&ndash;&gt;-->\\n    <!--</header>-->\\n\\n    '), HTML.UL(\"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"tasks\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n        \" ];\n  }), \"\\n    \") ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"hello\");\nTemplate[\"hello\"] = new Template(\"Template.hello\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<button>Click Me</button>\\n  \"), HTML.P(\"You've pressed the button \", Blaze.View(\"lookup:counter\", function() {\n    return Spacebars.mustache(view.lookup(\"counter\"));\n  }), \" times.\") ];\n}));\n\n}).call(this);\n","servePath":"/template.DescentGym.js","sourceMap":{"version":3,"sources":["/template.DescentGym.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/template.DescentGym.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw('<div class=\"container\"></div>\\n\\n<div id=\"side\">\\n    London\\n</div>\\n    <!--<header>-->\\n        <!--<p>나에게 맞추어진 모바일 트레이너</p>-->\\n        <!--<h1>DESCENTE GYM</h1>-->\\n        <!--<p><small>나의 트레이닝 레벨을 진단하고</small></p>-->\\n        <!--<p><small>레벨에 맞는 프로그램으로 운동하세요.</small></p>-->\\n\\n\\n        <!--&lt;!&ndash;<form>&ndash;&gt;-->\\n            <!--&lt;!&ndash;ID:<br>&ndash;&gt;-->\\n            <!--&lt;!&ndash;<input type=\"text\" name=\"ID\">&ndash;&gt;-->\\n            <!--&lt;!&ndash;<br>&ndash;&gt;-->\\n            <!--&lt;!&ndash;PassWord:<br>&ndash;&gt;-->\\n            <!--&lt;!&ndash;<input type=\"text\" name=\"PassWord\">&ndash;&gt;-->\\n        <!--&lt;!&ndash;</form>&ndash;&gt;-->\\n    <!--</header>-->\\n\\n    '), HTML.UL(\"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"tasks\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n        \" ];\n  }), \"\\n    \") ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"hello\");\nTemplate[\"hello\"] = new Template(\"Template.hello\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<button>Click Me</button>\\n  \"), HTML.P(\"You've pressed the button \", Blaze.View(\"lookup:counter\", function() {\n    return Spacebars.mustache(view.lookup(\"counter\"));\n  }), \" times.\") ];\n}));\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// DescentGym.js                                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nTasks = new Mongo.Collection(\"tasks\");                                 // 1\n                                                                       //\nif (Meteor.isClient) {                                                 // 3\n  // This code only runs on the client                                 //\n  Template.body.helpers({                                              // 5\n    tasks: function () {                                               // 6\n      return Tasks.find({});                                           // 7\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.body.events({                                               // 11\n    \"submit .new-task\": function (event) {                             // 12\n      // Prevent default browser form submit                           //\n      event.preventDefault();                                          // 14\n                                                                       //\n      // Get value from form element                                   //\n      var text = event.target.text.value;                              // 17\n                                                                       //\n      // Insert a task into the collection                             //\n      Tasks.insert({                                                   // 20\n        text: text,                                                    // 21\n        createdAt: new Date(), // current time                         // 22\n        ower: Meteor.userId(),                                         // 23\n        username: Meteor.user().username                               // 24\n      });                                                              //\n                                                                       //\n      // Clear form                                                    //\n      event.target.text.value = \"\";                                    // 28\n    },                                                                 //\n    \"change .hide-completed input\": function (event) {                 // 30\n      Session.set(\"hideCompleted\", event.target.checked);              // 31\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.body.helpers({                                              // 35\n    tasks: function () {                                               // 36\n      if (Session.get(\"hideCompleted\")) {                              // 37\n        return Tasks.find({ checked: { $ne: true } }, { sort: { createAt: -1 } });\n      } else {                                                         //\n        return Tasks.find({}, { sort: { createAT: -1 } });             // 40\n      }                                                                //\n    },                                                                 //\n    hideCompleted: function () {                                       // 43\n      return Session.get(\"highCompleted\");                             // 44\n    },                                                                 //\n    incompleteCount: function () {                                     // 46\n      return Tasks.find({ checked: { $ne: true } }).count();           // 47\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.task.events({                                               // 51\n    \"click .toggle-checked\": function () {                             // 52\n      // Set the checked property to the opposite of its current value\n      Tasks.update(this._id, {                                         // 54\n        $set: { checked: !this.checked }                               // 55\n      });                                                              //\n    },                                                                 //\n    \"click .delete\": function () {                                     // 58\n      Tasks.remove(this._id);                                          // 59\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Accounts.ui.config({                                                 // 63\n    passwordSignupFields: \"USERNAME_ONLY\"                              // 64\n  });                                                                  //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/DescentGym.js","sourceMap":{"version":3,"sources":["meteor://💻app/DescentGym.js"],"names":[],"mappings":";;;;;;;;AAAA,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;AAEtC,IAAI,MAAM,CAAC,QAAQ,EAAE;;AAEnB,UAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AACpB,SAAK,EAAE,YAAY;AACjB,aAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACvB;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACnB,sBAAkB,EAAE,UAAU,KAAK,EAAE;;AAEnC,WAAK,CAAC,cAAc,EAAE,CAAC;;;AAGvB,UAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;;;AAGnC,WAAK,CAAC,MAAM,CAAC;AACX,YAAI,EAAE,IAAI;AACV,iBAAS,EAAE,IAAI,IAAI,EAAE;AACrB,YAAI,EAAE,MAAM,CAAC,MAAM,EAAE;AACrB,gBAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ;OACjC,CAAC,CAAC;;;AAGH,WAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KAC9B;AACD,kCAA8B,EAAE,UAAU,KAAK,EAAE;AAC/C,aAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACpD;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AACpB,SAAK,EAAE,YAAW;AAChB,UAAI,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;AAChC,eAAO,KAAK,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,EAAC,EAAE,EAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,CAAC,CAAC,EAAC,EAAC,CAAC,CAAC;OACnE,MAAM;AACL,eAAO,KAAK,CAAC,IAAI,CAAC,EAAE,EAAC,EAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,CAAC,CAAC,EAAC,EAAC,CAAC,CAAC;OAC9C;KACF;AACD,iBAAa,EAAE,YAAY;AACzB,aAAO,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;KACrC;AACD,mBAAe,EAAE,YAAW;AAC1B,aAAO,KAAK,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC;KACnD;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACnB,2BAAuB,EAAE,YAAY;;AAEnC,WAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;AACrB,YAAI,EAAE,EAAC,OAAO,EAAE,CAAE,IAAI,CAAC,OAAO,EAAC;OAChC,CAAC,CAAC;KACJ;AACD,mBAAe,EAAE,YAAY;AAC3B,WAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACxB;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;AACjB,wBAAoB,EAAE,eAAe;GACtC,CAAC,CAAC;CACJ,wE","file":"/DescentGym.js","sourcesContent":["Tasks = new Mongo.Collection(\"tasks\");\n\nif (Meteor.isClient) {\n  // This code only runs on the client\n  Template.body.helpers({\n    tasks: function () {\n      return Tasks.find({});\n    }\n  });\n\n  Template.body.events({\n    \"submit .new-task\": function (event) {\n      // Prevent default browser form submit\n      event.preventDefault();\n\n      // Get value from form element\n      var text = event.target.text.value;\n\n      // Insert a task into the collection\n      Tasks.insert({\n        text: text,\n        createdAt: new Date(), // current time\n        ower: Meteor.userId(),\n        username: Meteor.user().username\n      });\n\n      // Clear form\n      event.target.text.value = \"\";\n    },\n    \"change .hide-completed input\": function (event) {\n      Session.set(\"hideCompleted\", event.target.checked);\n    }\n  });\n\n  Template.body.helpers({\n    tasks: function() {\n      if (Session.get(\"hideCompleted\")) {\n        return Tasks.find({checked: {$ne: true}}, {sort: {createAt: -1}});\n      } else {\n        return Tasks.find({},{sort: {createAT: -1}});\n      }\n    },\n    hideCompleted: function () {\n      return Session.get(\"highCompleted\");\n    },\n    incompleteCount: function() {\n      return Tasks.find({checked: {$ne: true}}).count();\n    }\n  });\n\n  Template.task.events({\n    \"click .toggle-checked\": function () {\n      // Set the checked property to the opposite of its current value\n      Tasks.update(this._id, {\n        $set: {checked: ! this.checked}\n      });\n    },\n    \"click .delete\": function () {\n      Tasks.remove(this._id);\n    }\n  });\n\n  Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n  });\n}\n\n"]}}]