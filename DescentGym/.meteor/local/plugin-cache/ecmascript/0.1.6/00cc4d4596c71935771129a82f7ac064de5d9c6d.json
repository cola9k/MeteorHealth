{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Tasks = new Mongo.Collection(\"tasks\");\n\nif (Meteor.isClient) {\n  // This code only runs on the client\n  Template.body.helpers({\n    tasks: function () {\n      return Tasks.find({});\n    }\n  });\n\n  Template.body.events({\n    \"submit .new-task\": function (event) {\n      // Prevent default browser form submit\n      event.preventDefault();\n\n      // Get value from form element\n      var text = event.target.text.value;\n\n      // Insert a task into the collection\n      Tasks.insert({\n        text: text,\n        createdAt: new Date(), // current time\n        ower: Meteor.userId(),\n        username: Meteor.user().username\n      });\n\n      // Clear form\n      event.target.text.value = \"\";\n    },\n    \"change .hide-completed input\": function (event) {\n      Session.set(\"hideCompleted\", event.target.checked);\n    }\n  });\n\n  Template.body.helpers({\n    tasks: function () {\n      if (Session.get(\"hideCompleted\")) {\n        return Tasks.find({ checked: { $ne: true } }, { sort: { createAt: -1 } });\n      } else {\n        return Tasks.find({}, { sort: { createAT: -1 } });\n      }\n    },\n    hideCompleted: function () {\n      return Session.get(\"highCompleted\");\n    },\n    incompleteCount: function () {\n      return Tasks.find({ checked: { $ne: true } }).count();\n    }\n  });\n\n  Template.task.events({\n    \"click .toggle-checked\": function () {\n      // Set the checked property to the opposite of its current value\n      Tasks.update(this._id, {\n        $set: { checked: !this.checked }\n      });\n    },\n    \"click .delete\": function () {\n      Tasks.remove(this._id);\n    }\n  });\n\n  Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n  });\n}","ast":null,"map":{"version":3,"sources":["/DescentGym.js"],"names":[],"mappings":"AAAA,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;AAEtC,IAAI,MAAM,CAAC,QAAQ,EAAE;;AAEnB,UAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AACpB,SAAK,EAAE,YAAY;AACjB,aAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACvB;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACnB,sBAAkB,EAAE,UAAU,KAAK,EAAE;;AAEnC,WAAK,CAAC,cAAc,EAAE,CAAC;;;AAGvB,UAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;;;AAGnC,WAAK,CAAC,MAAM,CAAC;AACX,YAAI,EAAE,IAAI;AACV,iBAAS,EAAE,IAAI,IAAI,EAAE;AACrB,YAAI,EAAE,MAAM,CAAC,MAAM,EAAE;AACrB,gBAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ;OACjC,CAAC,CAAC;;;AAGH,WAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KAC9B;AACD,kCAA8B,EAAE,UAAU,KAAK,EAAE;AAC/C,aAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACpD;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AACpB,SAAK,EAAE,YAAW;AAChB,UAAI,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;AAChC,eAAO,KAAK,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,EAAC,EAAE,EAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,CAAC,CAAC,EAAC,EAAC,CAAC,CAAC;OACnE,MAAM;AACL,eAAO,KAAK,CAAC,IAAI,CAAC,EAAE,EAAC,EAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,CAAC,CAAC,EAAC,EAAC,CAAC,CAAC;OAC9C;KACF;AACD,iBAAa,EAAE,YAAY;AACzB,aAAO,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;KACrC;AACD,mBAAe,EAAE,YAAW;AAC1B,aAAO,KAAK,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC;KACnD;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACnB,2BAAuB,EAAE,YAAY;;AAEnC,WAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;AACrB,YAAI,EAAE,EAAC,OAAO,EAAE,CAAE,IAAI,CAAC,OAAO,EAAC;OAChC,CAAC,CAAC;KACJ;AACD,mBAAe,EAAE,YAAY;AAC3B,WAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACxB;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;AACjB,wBAAoB,EAAE,eAAe;GACtC,CAAC,CAAC;CACJ","file":"/DescentGym.js.map","sourcesContent":["Tasks = new Mongo.Collection(\"tasks\");\n\nif (Meteor.isClient) {\n  // This code only runs on the client\n  Template.body.helpers({\n    tasks: function () {\n      return Tasks.find({});\n    }\n  });\n\n  Template.body.events({\n    \"submit .new-task\": function (event) {\n      // Prevent default browser form submit\n      event.preventDefault();\n\n      // Get value from form element\n      var text = event.target.text.value;\n\n      // Insert a task into the collection\n      Tasks.insert({\n        text: text,\n        createdAt: new Date(), // current time\n        ower: Meteor.userId(),\n        username: Meteor.user().username\n      });\n\n      // Clear form\n      event.target.text.value = \"\";\n    },\n    \"change .hide-completed input\": function (event) {\n      Session.set(\"hideCompleted\", event.target.checked);\n    }\n  });\n\n  Template.body.helpers({\n    tasks: function() {\n      if (Session.get(\"hideCompleted\")) {\n        return Tasks.find({checked: {$ne: true}}, {sort: {createAt: -1}});\n      } else {\n        return Tasks.find({},{sort: {createAT: -1}});\n      }\n    },\n    hideCompleted: function () {\n      return Session.get(\"highCompleted\");\n    },\n    incompleteCount: function() {\n      return Tasks.find({checked: {$ne: true}}).count();\n    }\n  });\n\n  Template.task.events({\n    \"click .toggle-checked\": function () {\n      // Set the checked property to the opposite of its current value\n      Tasks.update(this._id, {\n        $set: {checked: ! this.checked}\n      });\n    },\n    \"click .delete\": function () {\n      Tasks.remove(this._id);\n    }\n  });\n\n  Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n  });\n}"]},"hash":"00cc4d4596c71935771129a82f7ac064de5d9c6d"}
